using System;
using System.Globalization;

namespace Gold.Core.Version2
{
    /// <summary>
    /// represents a goldtag user who is finalized registration process
    /// </summary>
    public class RegisteredUser
    {
        /// <summary>
        /// DB id
        /// </summary>
        public Guid UserId { get; set; }
        /// <summary>
        /// First name (also middle name)
        /// </summary>
        public string FirstName { get; set; }
        /// <summary>
        /// Family name
        /// </summary>
        public string FamilyName { get; set; }
        /// <summary>
        /// Date of birth
        /// </summary>
        public DateTime Birthdate { get; set; }
        /// <summary>
        /// Email address
        /// </summary>
        public string Email { get; set; }
        /// <summary>
        /// Password of the user
        /// </summary>
        public string Password { get; set; }
        /// <summary>
        /// Mobile number
        /// </summary>
        public string Phone { get; set; }
        /// <summary>
        /// Member id generated by goldtag
        /// </summary>
        public int MemberId { get; set; }
        /// <summary>
        /// If true then user  is banned
        /// </summary>
        public bool Banned { get; set; }
        /// <summary>
        /// Special comments by admins (to be used for banning etc.)
        /// </summary>
        public string AdminNotes { get; set; }
        /// <summary>
        /// User register time and date
        /// </summary>
        public DateTime DateRegistered { get; set; }
        /// <summary>
        /// User verified time and date
        /// </summary>
        public DateTime DateVerified { get; set; }
        /// <summary>
        /// membership level
        /// </summary>
        public int UserLevel { get; set; }
        

        private RegisteredUser() { }

        /// <summary>
        /// Creates new registered user from registering user
        /// </summary>
        /// <param name="user">user</param>
        public RegisteredUser(UserRegistration user)
        {
            MemberId = user.MemberId;
            FirstName = user.FirstName;
            FamilyName = user.FamilyName;
            Birthdate = user.Birthdate;
            Email = user.Email;
            Password = user.Password;
            Phone = user.Phone;
            Banned = user.Banned;
            AdminNotes = user.AdminNotes;
            DateRegistered = user.DateCreated;
            DateVerified = DateTime.Now;
            UserLevel = 1;
        }   
        
        /// <summary>
        /// creates new registered user from version 1 user
        /// </summary>
        /// <param name="user">user</param>
        public RegisteredUser(Users.User user)
        {
            MemberId = user.MemberId;
            FirstName = user.FirstName;
            FamilyName = user.FamilyName;
            Birthdate = user.Birthdate;
            Email = user.Email;
            Password = user.Password;
            Phone = user.Phone;
            Banned = user.Banned;
            if (user.AdminNotes != null)
            {
                AdminNotes = user.AdminNotes + "_id_" + user.UserId + "_id_";
            } 
            else
            {
                AdminNotes = "_id_" + user.UserId + "_id_";
            }
            DateRegistered = user.DateCreated;
            DateVerified = DateTime.Now;
            UserLevel = 2;            
            if (user.Verified)
            {
                UserLevel = 3;
            }
        }

        /// <summary>
        /// bans the user with reason
        /// </summary>
        /// <param name="reason">ban reason</param>
        public void PermanentlyBanUser(string reason)
        {
            Banned = true;
            AdminNotes = (AdminNotes != null) ? AdminNotes += ":" + reason : reason;
        }

        /// <summary>
        /// lifts ban
        /// </summary>
        /// <param name="reason">lift reason</param>
        public void LiftUserBan(string reason)
        {
            Banned = false;
            AdminNotes = (AdminNotes != null) ? AdminNotes += ":" + reason : reason;

        }

    }
}
